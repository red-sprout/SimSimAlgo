package dataStructure;

/*
 * ****** 힙(Heap) ******
 * 1) 힙(Heap)이란
 * 
 * 1. 완전 이진트리의 일종으로 우선순위 큐를 위하여 만들어진 자료구조
 * 2. 여러개의 값들 중에 최솟값이나 최댓값을 빠르게 찾기 위해서 만든 자료구조
 * 3. 힙은 일종의 반정렬 상태(느슨한 정렬 상태)를 유지함.
 * 	- 큰 값이 상위레벨에 있고 작은 값이 하위 레벨에 있다는 정도
 *  - 간단히 말하면 부모 노드의 키 값이 자식 노드의 키 값보다 항상 큰(작은) 이진 트리를 말함.
 * 4. 힙 트리에서는 중복된 값을 허용(이진 탐색 트리에서는 중복된 값을 허용하지 않는다)
 * 
 * 우선순위 큐: 데이터들이 우선순위를 가지고 있고 우선순위가 높은 데이터가 먼저 나감.
 * 이용 사례)
 * 1. 시뮬레이션 시스템
 * 2. 네트워크 트래픽 제어
 * 3. 운영체제에서의 작업 스케쥴링
 * 3. 수치 해석적인 계산
 * etc...
 * 
 * 우선순위 큐는 배열, 연결 리스트, 힙으로 구현 가능 이중에서 힙(heap)으로 구현하는게 가장 효율적임.
 * 
 * 2) 힙(Heap)의 종류
 * 
 * 2-1) 최대 힙(max heap)
 * 부모 노드의 키 값이 자식 노드의 키 값보다 크거나 같은 완전 이진 트리
 * key(부모 노드) >= key(자식 노드)
 * 
 * 2-2) 최소 힙(min heap)
 * 부모 노드의 키 값이 자식 노드의 키 값보다 작거나 같은 완전 이진 트리
 * key(부모 노드) <= key(자식 노드)
 */

public class Heap {
	
	public static void main(String[] args) {
		
	}
}
